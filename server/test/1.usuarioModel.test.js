// Generated by CoffeeScript 1.4.0
(function() {
  var DocumentObjectId, Usuario, configDB, db, mongoose, should;

  mongoose = require("mongoose");

  configDB = require("./../config/environment")("test");

  Usuario = require("./../models/usuarioModel");

  should = require("should");

  DocumentObjectId = mongoose.Types.ObjectId;

  db = void 0;

  mongoose.connection.on("error", function(e) {
    return console.log("Conex√£o: " + e);
  });

  describe("Usuario Model", function() {
    before(function(done) {
      db = mongoose.connect(configDB.host, configDB.database);
      return Usuario.remove({}, function() {
        return done();
      });
    });
    after(function(done) {
      return db.connection.db.dropDatabase(function() {
        return db.connection.close(function() {
          return done();
        });
      });
    });
    describe("Salvar", function() {
      var testCount;
      testCount = 0;
      afterEach(function(done) {
        testCount.should.eql(2);
        return Usuario.remove({}, function() {
          return done();
        });
      });
      return it("Salvar model", function(done) {
        var user, usuarioModel;
        user = {
          nome: "Meu Nome",
          email: "meuemail@com.br",
          senha: "senha123"
        };
        usuarioModel = new Usuario(user);
        usuarioModel.on("save", function(u) {
          u.get("_id").should.be.an.instanceOf(DocumentObjectId);
          u.get("nome").should.eql(user.nome);
          u.get("email").should.eql(user.email);
          u.get("salt").should.be.ok;
          u.get("senha").should.be.ok;
          u.get("senha").should.not.eql(user.senha);
          testCount++;
          return done();
        });
        return usuarioModel.save(function(e, u) {
          should.not.exist(e);
          should.exist(u);
          return testCount++;
        });
      });
    });
    return describe("Validacoes", function() {
      var usuarioAtual;
      usuarioAtual = void 0;
      before(function(done) {
        var user, usuarioModel;
        user = {
          nome: "Meu Nome",
          email: "meuemail@com.br",
          senha: "senha123"
        };
        usuarioModel = new Usuario(user);
        return usuarioModel.save(function(e, u) {
          if (e) {
            done(e);
          }
          usuarioAtual = u;
          return done();
        });
      });
      after(function(done) {
        return Usuario.remove({}, function() {
          return done();
        });
      });
      it("Campos Requeridos", function(done) {
        var usuarioModel;
        usuarioModel = new Usuario();
        return usuarioModel.save(function(e, u) {
          should.exist(e.errors.nome);
          should.exist(e.errors.email);
          should.exist(e.errors.senha);
          should.exist(e.errors.salt);
          should.not.exist(u);
          return done();
        });
      });
      it("Validar Senha", function() {
        usuarioAtual.passValidate("senha123").should.ok;
        return usuarioAtual.passValidate("otherSenha123").should.not.ok;
      });
      it("Buscar por E-mail existente", function(done) {
        return Usuario.findByEmail("meuemail@com.br", (function(u) {
          should.exist(u);
          return done();
        }), done);
      });
      return it("Buscar por E-mail nao existente", function(done) {
        return Usuario.findByEmail("noemail@com.br", (function(u) {
          should.not.exist(u);
          return done();
        }), done);
      });
    });
  });

}).call(this);
