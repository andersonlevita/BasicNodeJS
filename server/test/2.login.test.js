// Generated by CoffeeScript 1.4.0
(function() {
  var DocumentObjectId, Login, Usuario, configDB, db, mongoose, msgHelper, should;

  mongoose = require("mongoose");

  configDB = require("./../config/environment")("test");

  Usuario = require("./../models/usuarioModel");

  Login = require("./../login/login");

  msgHelper = require("./../helpers/message");

  should = require("should");

  DocumentObjectId = mongoose.Types.ObjectId;

  db = void 0;

  mongoose.connection.on("error", function(e) {
    return console.log("Conex√£o: " + e);
  });

  describe("Login", function() {
    var user;
    user = {
      nome: "Usuario Login Teste",
      email: "login@com.br",
      senha: "login"
    };
    before(function(done) {
      db = mongoose.connect(configDB.host, configDB.database);
      return Usuario.remove({}, function() {
        var usuarioModel;
        usuarioModel = new Usuario(user);
        return usuarioModel.save(function(e, u) {
          should.not.exist(e);
          should.exist(u);
          return done();
        });
      });
    });
    after(function(done) {
      return db.connection.db.dropDatabase(function() {
        return db.connection.close(function() {
          return done();
        });
      });
    });
    return describe("Validacoes e Autenticacao", function() {
      var req;
      req = {
        body: {
          email: "login_err@com.br",
          senha: "login"
        },
        session: {},
        connection: {
          remoteAddress: '127.0.0.1'
        },
        headers: {}
      };
      it("Email invalido", function(done) {
        return Login.login(req, {
          send: function(res, msg) {
            res.should.eql(412);
            msg.should.eql(msgHelper.loginFail);
            return done();
          }
        });
      });
      it("Senha invalida", function(done) {
        req.body.email = "login@com.br";
        req.body.senha = "login_err";
        return Login.login(req, {
          send: function(res, msg) {
            res.should.eql(412);
            msg.should.eql(msgHelper.loginFail);
            return done();
          }
        });
      });
      it("Autenticacao", function(done) {
        req.body.email = "login@com.br";
        req.body.senha = "login";
        return Login.login(req, {
          send: function(res, msg) {
            res.should.eql(200);
            should.exist(req.session.user);
            return done();
          }
        });
      });
      it("Validacao de request autenticado", function(done) {
        req.body.email = "login@com.br";
        req.body.senha = "login";
        return Login.login(req, {
          send: function(res, msg) {
            (Login.requestValidate(req)).should.be.ok;
            return done();
          }
        });
      });
      it("Validacao de request nao autenticado", function(done) {
        req.session = {};
        (Login.requestValidate(req)).should.not.be.ok;
        return done();
      });
      return it("Logout", function(done) {
        req.body.email = "login@com.br";
        req.body.senha = "login";
        return Login.login(req, {
          send: function(res, msg) {
            (Login.requestValidate(req)).should.be.ok;
            return Login.logout(req, {
              send: function(res, msg) {
                (Login.requestValidate(req)).should.not.be.ok;
                should.not.exist(req.session.user);
                return done();
              }
            });
          }
        });
      });
    });
  });

}).call(this);
